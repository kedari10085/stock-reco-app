rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }
    
    // Helper function to check if user is admin
    function isAdmin() {
      return isSignedIn() && 
             exists(/databases/$(database)/documents/admins/$(request.auth.token.email));
    }
    
    // Admins collection - Allow authenticated users to read their own admin status
    match /admins/{email} {
      // Allow any authenticated user to check if an email is admin
      allow read: if isSignedIn();
      
      // Only allow admins to write admin data
      allow write: if isAdmin();
    }
    
    // Users collection
    match /users/{userId} {
      // Users can read their own data, admins can read all
      // Also allow reading all users for user count (needed for user numbering)
      allow read: if isSignedIn();
      
      // Users can create their own data, admins can write any user data
      allow create: if isSignedIn() && request.auth.uid == userId;
      allow update, delete: if isAdmin() || (isSignedIn() && request.auth.uid == userId);
    }
    
    // Recommendations collection
    match /recommendations/{recoId} {
      // Anyone authenticated can read recommendations
      allow read: if isSignedIn();
      
      // Only admins can create, update, or delete recommendations
      allow write: if isAdmin();
    }
    
    // App metadata and config
    match /config/{document=**} {
      // Anyone can read config/metadata
      allow read: if true;
      
      // Only admins can write config/metadata
      allow write: if isAdmin();
    }
    
    // App metadata
    match /app_metadata/{document=**} {
      // Anyone can read metadata
      allow read: if true;
      
      // Only admins can write metadata
      allow write: if isAdmin();
    }
  }
}
